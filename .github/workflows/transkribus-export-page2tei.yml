name: Export METS and PAGEÂ XML from Transkribus (by document) and apply page2tei

on:
  issues:
    types: [opened, edited]
  issue_comment:
    types: [created, edited]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions: write-all

jobs:
  run:
    name: run
    if: ${{ !github.event.issue.pull_request }}
    runs-on: ubuntu-latest
    outputs:
      tei_filename: ${{ steps.tei_filename.outputs.tei_filename }}
      issue_reply_file: ${{ steps.issue-reply.outputs.issue_reply_file }}
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.head_ref }}
    - uses: stefanbuck/github-issue-parser@v3
      id: issue-parser
      with:
        template-path: .github/ISSUE_TEMPLATE/transkribus-page2tei.yml
    - run: cat ${HOME}/issue-parser-result.json
    - run: cp ${HOME}/issue-parser-result.json ./issue-parser-result.json
    - run: mkdir -p ./scratch/page ./scratch/exported ./exported
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - uses: dse-as/run-notebook@v3-locked #fzimmermann89/run-notebook@357b84ea1b0605afb5ed2da0548ab80c9556cd1a #fzimmermann89/run-notebook@v3 #yaananth/run-notebook@v2
      id: ipynb
      env:
        RUNNER: ${{ toJson(runner) }}
        SECRETS: ${{ toJson(secrets) }}
        GITHUB: ${{ toJson(github) }}
        ISSUE: ./issue-parser-result.json
      with:
        notebook: "./transkribus-export-mets/transkribus-export-mets.ipynb"
        params: "./transkribus-export-mets/default-params.json"
        isReport: False
        poll: True
    - run: ls -l
    - run: git clone --branch v2.0.2 --single-branch https://github.com/dariok/page2tei.git
    - run: tree
    - run: sudo apt-get update && sudo apt-get install -y libxml2-utils
    - id: tei_filename
      run: echo "tei_filename=$(xmllint --xpath 'translate(//*[local-name()="trpDocMetadata"]/*[local-name()="title"]," ","_")' scratch/mets.xml)" >> "$GITHUB_OUTPUT"
    - name: METS to TEI (page2tei, XSLT)
      uses: pdaengeli/use-saxon-he-j@12.8.fix
      with:
        args: -s:scratch/mets.xml -xsl:page2tei/page2tei-0.xsl -o:scratch/exported/${{ steps.tei_filename.outputs.tei_filename }}.xml combine=true
    - name: Refine TEI (XSLT)
      uses: pdaengeli/use-saxon-he-j@12.8.fix
      with:
        args: -s:scratch/exported/${{ steps.tei_filename.outputs.tei_filename }}.xml -xsl:transkribus-export-mets/refine-tei.xsl -o:scratch/exported/${{ steps.tei_filename.outputs.tei_filename }}_refined.xml
    - run: mv -f scratch/exported/${{ steps.tei_filename.outputs.tei_filename }}_refined.xml scratch/exported/${{ steps.tei_filename.outputs.tei_filename }}.xml
    - name: Generate issue reply (XSLT)
      uses: pdaengeli/use-saxon-he-j@12.8.fix
      with:
        args: -s:scratch/exported/${{ steps.tei_filename.outputs.tei_filename }}.xml -xsl:transkribus-export-mets/reporting.xsl -it
    - run: mv scratch/exported/*.xml exported/

    # Create a multiline string to be used by the git-auto-commit Action
    - name: Set commit message
      id: commit_message_step
      run: |
        delimiter='EOF'
        {
            echo "commit_message<<$delimiter"
            sed -e '$a\' .commit-message.txt
            echo "$delimiter"
        } >> "$GITHUB_OUTPUT"
        rm -rf .commit-message.txt

    - uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: ${{ steps.commit_message_step.outputs.commit_message }}
        file_pattern: 'exported/**'
        skip_fetch: true    

    - name: Read issue reply file
      id: issue-reply
      run: |
        delimiter='EOF'
        {
            echo "issue_reply_file<<$delimiter"
            sed -e '$a\' .issue-reply-post-transform.txt
            echo "$delimiter"
        } >> "$GITHUB_OUTPUT"
        
    # exclude exported from artifact    
    - run: rm -r exported

 # for easier debugging:       
    - uses: actions/upload-pages-artifact@v3
      with:
        name: output
        path: .
      env:
        RUNNER: ${{ toJson(runner) }}

 # adding a reply to the issue thread
  add-comment:
    needs: run
    runs-on: ubuntu-latest
    env:
      TASKS: ${{ join(github.event.issue.labels.*.name,', ') }}
      ISSUE_MD: ${{ needs.run.outputs.issue_reply_file }}
    permissions:
      issues: write
    steps:
      - run: ls -l
      - name: Prepare comment (success)
        id: prepare-comment-success
        run: |
          {
            echo 'issue_reply<<DELIM'
            echo 
            echo '# Resultat des Exports/der Transformation: '
            echo "$ISSUE_MD"
            echo 
            echo "Details and artifact available at: https://github.com/dhBern/simler_data/actions/runs/${{ github.run_id }}"
            echo 
            echo DELIM
          } >> "$GITHUB_OUTPUT"

      - name: Add comment
        run: gh issue comment "$NUMBER" --body "$BODY"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
          NUMBER: ${{ github.event.issue.number }}
          BODY: ${{ steps.prepare-comment-success.outputs.issue_reply }} # ${{ steps.prepare-comment-failure.outputs.issue_reply }}
